:plugin: example
:type: filter

///////////////////////////////////////////
START - GENERATED VARIABLES, DO NOT EDIT!
///////////////////////////////////////////
:version: %VERSION%
:release_date: %RELEASE_DATE%
:changelog_url: %CHANGELOG_URL%
:include_path: ../../../../logstash/docs/include
///////////////////////////////////////////
END - GENERATED VARIABLES, DO NOT EDIT!
///////////////////////////////////////////

[id="plugins-{type}s-{plugin}"]

== logstash-filter-s3-upload-malware-results

=== Example filter plugin

[,logstash]
----
filter{
  s3-upload-malware-results {
    s3_path => '/mdata/resultData/realTime/'
    file_field => '[path]'
    hash_field => 'hash'
    results_field => 'fb_s3-upload-malware-results'
    loader => 'virustotal'
    bucket => 'malware'
    endpoint => "s3.redborder.cluster"
    access_key_id => "access_key_id"
    secret_access_key => "secret_access_key"
    force_path_style => true
    ssl_verify_peer => false
    ssl_ca_bundle => "/var/opt/opscode/nginx/ca/s3.redborder.cluster.crt"
  }
}
----

=== Description

This is an example of Logstash filter plugin to upload file analysis results to s3.

[id="plugins-{type}s-{plugin}-options"]
==== Filter Configuration Options

[cols="<,<,<",options="header",]
|====================================================================================
|               Setting                                     |   Input type  |Required
| <<plugins-{type}s-{plugin}-s3_path>>                      |String         |Yes
| <<plugins-{type}s-{plugin}-file_field>>                   |String         |No
| <<plugins-{type}s-{plugin}-hash_field>>                   |String         |No
| <<plugins-{type}s-{plugin}-results_field>>                |String         |No
| <<plugins-{type}s-{plugin}-loader>>                       |String         |No
| <<plugins-{type}s-{plugin}-bucket>>                       |String         |No
| <<plugins-{type}s-{plugin}-endpoint>>                     |String         |No
| <<plugins-{type}s-{plugin}-access_key_id>>                |String         |Yes
| <<plugins-{type}s-{plugin}-secret_access_key>>            |String         |Yes
| <<plugins-{type}s-{plugin}-force_path_style>>             |Boolean        |No
| <<plugins-{type}s-{plugin}-ssl_verify_peer>>              |Boolean        |No
| <<plugins-{type}s-{plugin}-ssl_ca_bundle>>                |String         |No
|====================================================================================

[id="plugins-{type}s-{plugin}-s3_path"]
===== `s3_path`

  * Value type is `String`.
  * Default value is `""`

Where results are going to be stored in s3.

[id="plugins-{type}s-{plugin}-file_field"]
===== `file_field`

* Value type is `String`.
* Default value is `"[path]"`

Logstash event field (key) where the file to be analyzed is located.

[id="plugins-{type}s-{plugin}-hash_field"]
===== `hash_field`

* Value type is `String`.
* Default value is `"hash"`

Logstash event field (key) where the file hash is located.

[id="plugins-{type}s-{plugin}-results_field"]
===== `results_field`

* Value type is `String`.
* *Required*

Logstash event field (key) where file analysis are located.

[id="plugins-{type}s-{plugin}-loader"]
===== `loader`

* Value type is `String`.
* *Required*

Loader name

[id="plugins-{type}s-{plugin}-bucket"]
===== `bucket`

* Value type is `String`.
* Default value is `"malware"`

S3 bucket

[id="plugins-{type}s-{plugin}-endpoint"]
===== `endpoint`

* Value type is `String`.
* Default value is `"s3.redborder.cluster"`

S3 Endpoint

[id="plugins-{type}s-{plugin}-access_key_id"]
===== `access_key_id`

* Value type is `String`.
* *Required*

S3 Access key

[id="plugins-{type}s-{plugin}-secret_access_key"]
===== `secret_access_key`

* Value type is `String`.
* *Required*

S3 Secret Access key

[id="plugins-{type}s-{plugin}-force_path_style"]
===== `force_path_style`

* Value type is `Boolean`.
* Default value is `true`

S3 force_path_style option

[id="plugins-{type}s-{plugin}-ssl_verify_peer"]
===== `ssl_verify_peer`

* Value type is `Boolean`.
* Default value is `false`

S3 ssl_verify_peer option

[id="plugins-{type}s-{plugin}-ssl_ca_bundle"]
===== `ssl_ca_bundle`

* Value type is `String`.
* Default value is `"/var/opt/opscode/nginx/ca/s3.redborder.cluster.crt"`

Certificate path

[id="plugins-{type}s-{plugin}-common-options"]
